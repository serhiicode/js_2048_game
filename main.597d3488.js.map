{"version":3,"sources":["scripts/main.js"],"names":["start","document","querySelector","scoreHTML","cells","querySelectorAll","gameIsStarted","score","rows","cols","gameField","renderGameField","innerHTML","i","length","className","generateNumberTwoOrFour","numbers","Math","floor","random","generateInEmptyCell","emptyCells","getEmptyCellIndex","emptyCellCoords","row","col","coords","push","generateCell","cell","gameStart","gameStatus","moveStatus","tempGameField","JSON","parse","stringify","r","slideForCheck","reverse","rotateGame","map","val","index","canMove","filter","item","gameOver","c","winner","classList","remove","removeZeros","arr","slide","leftArrow","rightArrow","upArrow","downArrow","addEventListener","add","e","key"],"mappings":"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","file":"main.597d3488.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst start = document.querySelector('.button');\nconst scoreHTML = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('.field-cell');\nlet gameIsStarted = false;\nlet score = 0;\nconst rows = 4;\nconst cols = 4;\nconst gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction renderGameField() {\n  cells[0].innerHTML = !gameField[0][0] ? '' : gameField[0][0];\n  cells[1].innerHTML = !gameField[0][1] ? '' : gameField[0][1];\n  cells[2].innerHTML = !gameField[0][2] ? '' : gameField[0][2];\n  cells[3].innerHTML = !gameField[0][3] ? '' : gameField[0][3];\n  cells[4].innerHTML = !gameField[1][0] ? '' : gameField[1][0];\n  cells[5].innerHTML = !gameField[1][1] ? '' : gameField[1][1];\n  cells[6].innerHTML = !gameField[1][2] ? '' : gameField[1][2];\n  cells[7].innerHTML = !gameField[1][3] ? '' : gameField[1][3];\n  cells[8].innerHTML = !gameField[2][0] ? '' : gameField[2][0];\n  cells[9].innerHTML = !gameField[2][1] ? '' : gameField[2][1];\n  cells[10].innerHTML = !gameField[2][2] ? '' : gameField[2][2];\n  cells[11].innerHTML = !gameField[2][3] ? '' : gameField[2][3];\n  cells[12].innerHTML = !gameField[3][0] ? '' : gameField[3][0];\n  cells[13].innerHTML = !gameField[3][1] ? '' : gameField[3][1];\n  cells[14].innerHTML = !gameField[3][2] ? '' : gameField[3][2];\n  cells[15].innerHTML = !gameField[3][3] ? '' : gameField[3][3];\n\n  for (let i = 0; i < cells.length; i++) {\n    switch (cells[i].innerHTML) {\n      case '2':\n        cells[i].className = 'field-cell field-cell--2';\n        break;\n      case '4':\n        cells[i].className = 'field-cell field-cell--4';\n        break;\n      case '8':\n        cells[i].className = 'field-cell field-cell--8';\n        break;\n      case '16':\n        cells[i].className = 'field-cell field-cell--16';\n        break;\n      case '32':\n        cells[i].className = 'field-cell field-cell--32';\n        break;\n      case '64':\n        cells[i].className = 'field-cell field-cell--64';\n        break;\n      case '128':\n        cells[i].className = 'field-cell field-cell--128';\n        break;\n      case '256':\n        cells[i].className = 'field-cell field-cell--256';\n        break;\n      case '512':\n        cells[i].className = 'field-cell field-cell--512';\n        break;\n      case '1024':\n        cells[i].className = 'field-cell field-cell--1024';\n        break;\n      case '2048':\n        cells[i].className = 'field-cell field-cell--2048';\n        break;\n      default:\n        cells[i].className = 'field-cell';\n    }\n  }\n}\n\nfunction generateNumberTwoOrFour() {\n  const numbers = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n  const random = Math.floor(Math.random() * 10);\n\n  return numbers[random];\n}\n\nfunction generateInEmptyCell() {\n  const emptyCells = getEmptyCellIndex();\n  const random = Math.floor(Math.random() * emptyCells.length);\n\n  return emptyCells[random];\n}\n\nfunction getEmptyCellIndex() {\n  const emptyCellCoords = [];\n\n  for (let row = 0; row < gameField.length; row++) {\n    for (let col = 0; col < gameField[row].length; col++) {\n      if (!gameField[row][col]) {\n        const coords = [row, col];\n\n        emptyCellCoords.push(coords);\n      }\n    }\n  }\n\n  if (emptyCellCoords.length !== 0) {\n    return emptyCellCoords;\n  } else {\n    return false;\n  }\n}\n\nfunction generateCell() {\n  const cell = generateInEmptyCell();\n\n  if (cell) {\n    gameField[cell[0]][cell[1]] = generateNumberTwoOrFour();\n  } else {\n    return 'no empty cells';\n  }\n}\n\nfunction gameStart() {\n  score = 0;\n  gameIsStarted = true;\n  generateCell();\n  generateCell();\n  renderGameField();\n}\n\nfunction gameStatus() {\n  const moveStatus = [true, true, true, true];\n  let tempGameField = JSON.parse(JSON.stringify(gameField));\n\n  for (let r = 0; r < rows; r++) {\n    let row = tempGameField[r];\n\n    row = slideForCheck(row);\n    tempGameField[r] = row;\n  }\n\n  if (JSON.stringify(tempGameField) === JSON.stringify(gameField)) {\n    moveStatus[0] = false;\n  }\n\n  tempGameField = JSON.parse(JSON.stringify(gameField));\n\n  for (let r = 0; r < rows; r++) {\n    let row = tempGameField[r];\n\n    row.reverse();\n    row = slideForCheck(row);\n    row.reverse();\n    tempGameField[r] = row;\n  }\n\n  if (JSON.stringify(tempGameField) === JSON.stringify(gameField)) {\n    moveStatus[1] = false;\n  }\n\n  let rotateGame = gameField\n    .map((val, index) => gameField.map(row => row[row.length - 1 - index]));\n\n  for (let r = 0; r < rows; r++) {\n    let row = rotateGame[r];\n\n    row = slideForCheck(row);\n    rotateGame[r] = row;\n  }\n\n  rotateGame = rotateGame\n    .map((val, index) => rotateGame.map(row => row[index]).reverse());\n\n  if (JSON.stringify(rotateGame) === JSON.stringify(gameField)) {\n    moveStatus[2] = false;\n  }\n\n  rotateGame = gameField\n    .map((val, index) => gameField.map(row => row[index]).reverse());\n\n  for (let r = 0; r < rows; r++) {\n    let row = rotateGame[r];\n\n    row = slideForCheck(row);\n    rotateGame[r] = row;\n  }\n\n  rotateGame = rotateGame\n    .map((val, index) => rotateGame.map(row => row[row.length - 1 - index]));\n\n  if (JSON.stringify(rotateGame) === JSON.stringify(gameField)) {\n    moveStatus[3] = false;\n  }\n\n  const canMove = moveStatus.filter(item => !item);\n\n  if (generateCell() === 'no empty cells' && canMove.length === 4) {\n    gameOver();\n  }\n\n  for (let r = 0; r < gameField.length; r++) {\n    for (let c = 0; c < gameField[r].length; c++) {\n      if (gameField[r][c] === 2048) {\n        winner();\n      }\n    }\n  }\n}\n\nfunction winner() {\n  gameIsStarted = false;\n  document.querySelector('.message-win').classList.remove('hidden');\n}\n\nfunction gameOver() {\n  gameIsStarted = false;\n  document.querySelector('.message-lose').classList.remove('hidden');\n}\n\nfunction removeZeros(arr) {\n  const row = arr.filter(cell => cell !== 0);\n\n  return row;\n}\n\nfunction slide(arr) {\n  let row = removeZeros(arr);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n    }\n  }\n\n  row = removeZeros(row);\n\n  for (let i = 0; i < cols; i++) {\n    if (!row[i]) {\n      row.push(0);\n    }\n  }\n\n  return row;\n}\n\nfunction slideForCheck(arr) {\n  let row = removeZeros(arr);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n    }\n  }\n\n  row = removeZeros(row);\n\n  for (let i = 0; i < cols; i++) {\n    if (!row[i]) {\n      row.push(0);\n    }\n  }\n\n  return row;\n}\n\nfunction leftArrow() {\n  for (let r = 0; r < rows; r++) {\n    let row = gameField[r];\n\n    row = slide(row);\n    gameField[r] = row;\n  }\n}\n\nfunction rightArrow() {\n  for (let r = 0; r < rows; r++) {\n    let row = gameField[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    gameField[r] = row;\n  }\n}\n\nfunction upArrow() {\n  let rotateGame = gameField\n    .map((val, index) => gameField.map(row => row[row.length - 1 - index]));\n\n  for (let r = 0; r < rows; r++) {\n    let row = rotateGame[r];\n\n    row = slide(row);\n    rotateGame[r] = row;\n  }\n\n  rotateGame = rotateGame\n    .map((val, index) => rotateGame.map(row => row[index]).reverse());\n\n  for (let r = 0; r < rows; r++) {\n    gameField[r] = rotateGame[r];\n  }\n}\n\nfunction downArrow() {\n  let rotateGame = gameField\n    .map((val, index) => gameField.map(row => row[index]).reverse());\n\n  for (let r = 0; r < rows; r++) {\n    let row = rotateGame[r];\n\n    row = slide(row);\n    rotateGame[r] = row;\n  }\n\n  rotateGame = rotateGame\n    .map((val, index) => rotateGame.map(row => row[row.length - 1 - index]));\n\n  for (let r = 0; r < rows; r++) {\n    gameField[r] = rotateGame[r];\n  }\n}\n\nstart.addEventListener('click', () => {\n  for (let r = 0; r < gameField.length; r++) {\n    for (let c = 0; c < gameField[r].length; c++) {\n      gameField[r][c] = 0;\n    }\n  }\n\n  start.classList.remove('start');\n  start.classList.add('restart');\n  start.innerHTML = 'Restart';\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n  scoreHTML.innerHTML = '0';\n  gameStart();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (gameIsStarted) {\n    if (e.key === 'ArrowRight') {\n      rightArrow();\n    } else if (e.key === 'ArrowLeft') {\n      leftArrow();\n    } else if (e.key === 'ArrowUp') {\n      upArrow();\n    } else if (e.key === 'ArrowDown') {\n      downArrow();\n    }\n\n    scoreHTML.innerHTML = score;\n\n    generateCell();\n    renderGameField();\n    gameStatus();\n  };\n});\n"]}